cmake_minimum_required(VERSION 3.17)
project(MEBTEST)
include(ExternalProject)
set(CMAKE_CXX_STANDARD 14)

set(CMAKE_INSTALL_PREFIX "${CMAKE_BINARY_DIR}/install" CACHE STRING "TODO" FORCE)

set(MEBTEST_DEPENDENCIES)

find_package (Eigen3 3.3 NO_MODULE)

ExternalProject_Add(mosek
        SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/mosek-src"
        GIT_REPOSITORY https://github.com/RobotLocomotion/mosek.git
        GIT_TAG e4bcf2234391c2a16adbce3063090e77e3b1f027
        CMAKE_ARGS
        -DBUILD_TESTING=OFF
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        "-DCMAKE_C_COMPILER_LAUNCHER=${CMAKE_C_COMPILER_LAUNCHER}"
        "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}"
        "-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}"
        "-DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}"
        BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/mosek-build")
list(APPEND MEBTEST_DEPENDENCIES mosek)

list(INSERT CMAKE_PREFIX_PATH 0 "${CMAKE_INSTALL_PREFIX}")
set(MEBTEST_CMAKE_ARGS
        -DBUILD_TESTING=${BUILD_TESTING}
        -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
        "-DCMAKE_C_COMPILER_LAUNCHER=${CMAKE_C_COMPILER_LAUNCHER}"
        "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}"
        "-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}"
        "-DCMAKE_CXX_COMPILER_LAUNCHER=${CMAKE_CXX_COMPILER_LAUNCHER}"
        "-DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}"
        "-DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}"
        "-DCMAKE_EXE_LINKER_FLAGS=${CMAKE_EXE_LINKER_FLAGS}"
        "-DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}"
        "-DCMAKE_MODULE_LINKER_FLAGS=${CMAKE_MODULE_LINKER_FLAGS}"
        "-DCMAKE_MODULE_PATH=${CMAKE_MODULE_PATH}"
        "-DCMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}")

if(CMAKE_VERSION VERSION_LESS 3.2)
    set(EXTERNAL_PROJECT_ADD_BUILD_ALWAYS)
else()
    set(EXTERNAL_PROJECT_ADD_BUILD_ALWAYS BUILD_ALWAYS 1)
endif()
message("here is is ${CMAKE_CURRENT_SOURCE_DIR}")
ExternalProject_Add(mosek_eigen_blaze
        SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/src"
        CMAKE_ARGS ${MEBTEST_CMAKE_ARGS}
        BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}/mosek_eigen_blaze-build"
        ${EXTERNAL_PROJECT_ADD_BUILD_ALWAYS}
        DEPENDS ${IRIS_DEPENDENCIES})

if(CMAKE_VERSION VERSION_LESS 3.2)
    ExternalProject_Add_Step(mosek_eigen_blaze build_always
            COMMAND "${CMAKE_COMMAND}" -E echo "Force configure of mosek_eigen_blaze"
            DEPENDEES update
            DEPENDERS configure
            ALWAYS 1)
endif()